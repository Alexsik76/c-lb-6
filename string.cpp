#include <iostream>
#include <string>
#include <vector>
using namespace std;

// Функція, яка перевіряє, чи є символ голосною
bool is_vowel(char c)
{
    c = tolower(c); // переводимо символ в нижній регістр
    char vowels[10] = {'i', 'a', 'b'};
    //   char vowels[10] = {'i', 'a', 'b', 'i', 'о', 'у', 'я', 'є', 'ю', 'ї'};
    for (int i = 0; i < 10; i++)
    {
        if (c == vowels[i])
        {
            return true;
        }
    }
    return false;
}

// Функція, яка розбиває слово на склади згідно з правилами перенесення слів
string split_syllables(string word)
{
    string result = "";    // рядок, в якому будемо зберігати результат
    int n = word.length(); // довжина слова
    int i = 0;             // поточний індекс символу
    while (i < n)
    {
        char c = word[i]; // поточний символ
        result += c;      // додаємо символ до результату
        if (i < n - 1)
        {                            // якщо не останній символ
            char next = word[i + 1]; // наступний символ
            if (is_vowel(c) && is_vowel(next))
            {                  // якщо дві голосні підряд
                result += "-"; // додаємо дефіс
            }
            else if (!is_vowel(c) && !is_vowel(next))
            { // якщо дві приголосні підряд
                if (i < n - 2)
                {                                  // якщо не передостанній символ
                    char after_next = word[i + 2]; // символ після наступного
                    if (is_vowel(after_next))
                    {                   // якщо після приголосних йде голосна
                        result += next; // додаємо наступний символ до результату
                        result += "-";  // додаємо дефіс
                        i++;            // збільшуємо індекс на 1
                    }
                }
            }
        }
        i++; // збільшуємо індекс на 1
    }
    return result; // повертаємо результат
}

// Функція, яка інвертує слово (записує його у зворотному порядку)
string invert_word(string word)
{
    string result = "";    // рядок, в якому будемо зберігати результат
    int n = word.length(); // довжина слова
    for (int i = n - 1; i >= 0; i--)
    {                      // проходимо по слову з кінця до початку
        result += word[i]; // додаємо символ до результату
    }
    return result; // повертаємо результат
}

// Головна функція програми
int main()
{
    string line; // рядок, який вводиться з клавіатури
    cout << "Введіть рядок: ";
    getline(cin, line);   // зчитуємо рядок
    vector<string> words; // вектор, в якому будемо зберігати слова
    string word = "";     // поточне слово
    for (char c : line)
    { // проходимо по всім символам рядка
        if (c == ' ' || c == '.' || c == ',' || c == '!' || c == '?')
        { // якщо символ є розділовим знаком
            if (word != "")
            {                          // якщо слово не порожнє
                words.push_back(word); // додаємо слово до вектора
                word = "";             // очищуємо слово
            }
        }
        else
        {              // якщо символ є буквою
            word += c; // додаємо символ до слова
        }
    }
    if (word != "")
    {                          // якщо залишилося незавершене слово
        words.push_back(word); // додаємо його до вектора
    }
    cout << "Результат: ";
    for (int i = 0; i < words.size(); i++)
    {                    // проходимо по всім словам вектора
        word = words[i]; // поточне слово
        if (i % 2 == 0)
        {                             // якщо слово на непарній позиції
            word = invert_word(word); // інвертуємо слово
        }
        else
        {                                 // якщо слово на парній позиції
            word = split_syllables(word); // розбиваємо слово на склади
        }
        cout << word << " "; // виводимо слово з пробілом
    }
    cout << endl; // переходимо на новий рядок
    return 0;     // завершуємо програму
}
